// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Implementation of multiple if-else condtions priority wise to get register input
    Inc16(in=regOut,out=incIns);
    Mux16(a=regOut,b=incIns,sel=inc,out=incOrUnchanged);
    Mux16(a=incOrUnchanged,b=in,sel=load,out=loadOrOthers);
    Mux16(a=loadOrOthers,b=false,sel=reset,out=regIn);

    // Load bit of register to be ON at all times except when neither of load,inc and reset are asserted
    Or(a=inc,b=load,out=incOrLoad);
    Or(a=reset,b=incOrLoad,out=regLoad);

    Register(in=regIn,load=regLoad,out=out,out=regOut);
    

}
